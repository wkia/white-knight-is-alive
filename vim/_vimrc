" Set Vi non-compatible mode
set nocp

" Set GUI window size
"set lines=45
set columns=80

" Set font for GUI window
"set guifont=Courier_New:h11:cRUSSIAN
set guifont=Monospace\ 9

" Enable smart indent
filetype indent on

" Enable filetype plugins
filetype plugin on

" Always show (line, column) number
set ruler

" Use incremental searching, highlight results and use case-sensitive
" searching.
set incsearch
set hlsearch
set noignorecase

" Mark wrapped lines with the specified marker
"set showbreak=+++\ 

" Add tags made by MakeSystemTags script
set tags+=~/.vim/tags/cpptags
set tags+=~/.vim/tags/cppunittags

nnoremap <silent> <C-]> :execute "tjump" expand("<cword>")<CR>

" OmniCppComplete
" begin --
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_MayCompleteDot = 1
let OmniCpp_MayCompleteArrow = 1
let OmniCpp_MayCompleteScope = 1
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview
" end --

syntax enable
colorscheme default
set background=light " Set bg to 'light' because the default color scheme sets
                     " bg to default value (dark).
 
augroup ada
  autocmd BufEnter *.ad[asb] set shiftwidth=3
  "autocmd BufEnter *.ad[asb] set autoindent shiftwidth=3
  autocmd BufEnter *.ad[asb] set expandtab
augroup END
 
augroup c
  autocmd BufEnter *.c set cindent shiftwidth=2 cinoptions=+4,c1,C1,(0,Ws,t0
  autocmd BufEnter *.c set expandtab
augroup END
 
augroup cpp
  autocmd BufEnter *.cpp,*.cxx,*.h,*.hpp,*.hxx set cindent shiftwidth=2 cinoptions=+4,c1,C1,(0,Ws,t0,g0,is
  autocmd BufEnter *.cpp,*.cxx,*.h,*.hpp,*.hxx set expandtab
augroup END
 
augroup css
  autocmd BufEnter *.css set autoindent shiftwidth=4
  autocmd BufEnter *.css set expandtab
augroup END
 
augroup idl
  autocmd BufEnter *.idl set cindent shiftwidth=4
  autocmd BufEnter *.idl set expandtab
augroup END
 
augroup html
  autocmd BufEnter *.html set autoindent shiftwidth=2
  autocmd BufEnter *.html set expandtab
augroup END
 
augroup perl
  autocmd BufEnter *.pl set cindent shiftwidth=2
  autocmd BufEnter *.pl set expandtab
augroup END
 
augroup php
  autocmd BufEnter *.php set cindent shiftwidth=2
  autocmd BufEnter *.php set expandtab
augroup END
 
augroup xml
  autocmd BufEnter *.xml set autoindent shiftwidth=1
  autocmd BufEnter *.xml set expandtab
augroup END
 
augroup sgml
  autocmd!
 
  autocmd BufReadPost,FileReadPost *.sgml silent '[,']!sgml2utf8
  autocmd BufWritePre,FileWritePre *.sgml let sgml_au_line=line(".")
  autocmd BufWritePre,FileWritePre *.sgml let sgml_au_col=col(".")
  autocmd BufWritePre,FileWritePre *.sgml '[,']!utf82sgml
  autocmd BufWritePost *.sgml silent '[,']!sgml2utf8
  autocmd BufWritePost *.sgml silent call cursor(sgml_au_line, sgml_au_col)
 
  autocmd BufEnter *.sgml set textwidth=78
  autocmd BufEnter *.sgml set autoindent
  autocmd BufEnter *.sgml set shiftwidth=2
  autocmd BufEnter *.sgml set formatoptions=tcqa
  autocmd BufEnter *.sgml set expandtab
augroup END
 
augroup dsssl
  autocmd!
 
  autocmd BufReadPost,FileReadPost *.dsssl,*.dsl silent '[,']!dsssl2utf8
  autocmd BufWritePre,FileWritePre *.dsssl,*.dsl let sgml_au_line=line(".")
  autocmd BufWritePre,FileWritePre *.dsssl,*.dsl let sgml_au_col=col(".")
  autocmd BufWritePre,FileWritePre *.dsssl,*.dsl '[,']!utf82dsssl
  autocmd BufWritePost *.dsssl,*.dsl silent '[,']!dsssl2utf8
  autocmd BufWritePost *.dsssl,*.dsl silent call cursor(sgml_au_line, sgml_au_col)
 
  autocmd BufEnter *.dsssl,*.dsl set textwidth=78
  autocmd BufEnter *.dsssl,*.dsl set autoindent
  autocmd BufEnter *.dsssl,*.dsl set shiftwidth=2
  autocmd BufEnter *.dsssl,*.dsl set formatoptions=tcqa
  autocmd BufEnter *.sgml set expandtab
augroup END
 
augroup vim
  autocmd BufEnter ..vim,..vimrc,_vimrc set autoindent shiftwidth=2
  autocmd BufEnter ..vim,..vimrc,_vimrc set expandtab
augroup END
 
au BufNewFile,BufRead svn-commit.* setf svn
au BufNewFile,BufRead *.dsssl      setf dsl
 
"    - Ada;
"    - C/C++;
"    - IDL;
"    - HTML;
"    - XML.
au BufWritePre,FileWritePre *.ad[asb],*.h,*.hpp,*.hxx,*.c,*.cpp,*.cxx,*.css,*.idl,*.htm,*.html,*.php,*.xml let au_line=line(".")
au BufWritePre,FileWritePre *.ad[asb],*.h,*.hpp,*.hxx,*.c,*.cpp,*.cxx,*.css,*.idl,*.htm,*.html,*.php,*.xml let au_col=col(".")
au BufWritePre,FileWritePre *.ad[asb],*.h,*.hpp,*.hxx,*.c,*.cpp,*.cxx,*.css,*.idl,*.htm,*.html,*.php,*.xml %s/\s\+$//e
au BufWritePost *.ad[asb],*.h,*.hpp,*.hxx,*.c,*.cpp,*.cxx,*.css,*.idl,*.htm,*.html,*.php,*.xml silent call cursor(au_line, au_col)

